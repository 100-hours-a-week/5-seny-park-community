/* 회원정보 수정 */
main {
  display: flex;
  width: auto;
  align-items: center;
  height: calc(100vh - var(--header-height));
}
/*
CSS 클래스가 여러 파일에 걸쳐서 중복 발생하고 있습니다.
이 경우 후순위로 들어온 내용만 적용되게 되는데 의도치 않게 스타일이 깨질 확률이 매우 높습니다.
차라리 파일 하나로 전부 작성하고 나중에 split 하는걸 추천합니다.
파일 구조든 코드든 자연스럽게 구조화하고 싶은 욕심이 생기겠지만 실제로 개발 계속 해보면 사람 머리는 구조적인것 보다 눈에 보이는걸 우선시 합니다.
내가 관리 할 수 있는 범위까지만 혹은 협업을 하고 있다면 협업 할 때 의사소통 구조가 어떠한지를 반영해서 구조를 짜는게 좋습니다.
*/
.inner {
  width: 392px;
  height: 613px;
  margin: auto; /* 중앙정렬 */
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

.inner h2 {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 38px;
  font-weight: 700;
  font-size: 32px;
  margin: 0 auto 18px;
  text-align: center;
  box-sizing: border-box;
}

/* 프로필 사진 */
.inner .imgContainer {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  width: 378px;
  height: 206px;
  margin: auto; /* 중앙정렬 */
  padding: 12px 11px 0;
  box-sizing: border-box;
}

.inner .imgContainer .imgBox {
  display: flex;
  justify-content: center;
  align-items: center;
}

.inner .imgContainer .mid {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #c4c4c4;
  width: 149px;
  height: 149px;
  border-radius: 50%;
  cursor: pointer;
  background-image: url("https://ca.slack-edge.com/T06S5PH98UA-U06S87QLBLL-00467c70c6e2-512");
  background-size: cover;
  position: relative; /* 가상 요소를 위한 포지셔닝 기준 추가 */
}

.inner .imgContainer .mid::before {
  content: ""; /* 가상 요소를 생성하기 위한 필수 속성 */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.4); /* 검은색 오버레이 */
  border-radius: 50%; /* 부모와 동일한 모양을 유지 */
}

.inner .imgContainer .mid .editbtn {
  background-color: rgba(0, 0, 0, 0.35);
  width: 52px;
  height: 27px;
  border: 1px solid #fff;
  border-radius: 25px;
  display: flex;
  justify-content: center;
  align-items: center;
  color: #fff;
  position: relative; /* 오버레이 위에 위치하기 위해 z-index 적용을 위한 설정 */
  z-index: 1; /* 가상 요소(오버레이) 위에 버튼이 오도록 함 */
}

.inner .imgContainer .mid .editbtn:hover {
  background-color: rgba(0, 0, 0, 0.7);
}

/* 이미지 인풋 숨기기 */
.inner .imgContainer #profileUpload {
  display: none;
}

/* 이메일, 비밀번호, 비밀번호 확인, 닉네임 */
.inner .textContainer {
  display: flex;
  align-items: center;
  width: 392px;
  height: auto;
  padding-top: 33px;
  box-sizing: border-box;
}

.inner .textContainer .inputs {
  display: flex;
  flex-direction: column;
  justify-content: center;
  width: 100%;
  padding: 0 18px;
  box-sizing: border-box;
  gap: 12px;
}

.inner .textContainer .inputs .input {
  align-items: flex-start;
  font-weight: 700;
  font-size: 15px;
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.inner .textContainer .inputs .input .email {
  width: var(--input-width);
  height: 17px;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  font-size: 14px;
  font-weight: 400;
  margin-bottom: 4px;
}

.inner .textContainer .inputs .input input {
  width: var(--input-width);
  height: var(--input-height);
  padding: 10px;
  box-sizing: border-box;
  border: 1px solid #000;
  border-radius: 4px;
}

.inner .textContainer .inputs .input input:focus {
  outline: none;
}

.inner .textContainer .inputs .input input::placeholder {
  color: #000;
  font-weight: 400;
  font-size: 14px;
}

.inner .textContainer .inputs .red {
  box-sizing: border-box; /* padding, border 포함 */
  color: #ff0000;
  font-size: 12px;
  font-weight: 400;
  height: 17px;
  display: flex;
  align-items: center;
}

/* 수정하기 버튼 */
.inner .btn {
  width: var(--input-width);
  height: 37px;
  background-color: var(--btn-purple);
  border-radius: 4px;
  cursor: pointer;
  border: none;
  font-weight: 400;
  font-size: 14px;
  color: #fff;
}

.inner .btn:hover {
  background-color: var(--btn-hover);
}

/* 회원탈퇴 */
.inner .link .delete {
  display: flex;
  justify-content: center;
  align-items: center;
  width: auto;
  height: 17px;
  margin: 12px auto;
  font-weight: 400;
  font-size: 14px;
  color: #000;
}

.inner .completeBtn {
  margin-top: 65px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.inner .completeBtn .btn {
  background-color: var(--btn-purple);
  width: 102px;
  height: 46px;
  border-radius: 30px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}

.inner .completeBtn .btn:hover {
  background-color: var(--btn-hover);
}

.inner .completeBtn .btn a {
  color: #fff;
}

/* 토스트 메시지 */
.inner .toast {
  opacity: 0;
  position: fixed;
  bottom: 100px;
  left: 50%;
  transform: translate(-50%, 0);
  /* padding: 10px 50px; */
  background: rgba(0, 0, 0, 0.7);
  border-radius: 100px;
  color: #fff;
  transition: all 0.5s;
}
/*토스트 메시지 활성화 되었을 때*/
.inner .toast.active {
  opacity: 1;
  bottom: 150px;
}
